apply plugin: 'com.android.application'

Properties props = new Properties()
File gradlePropertiesFile = file("gradle.properties")
if (!gradlePropertiesFile.exists()) {
    throw new IllegalStateException(
            "Please create the file 'gradle.properties' before " +
                    "importing the project. Do not forget to add custom values!"
    )
}
props.load(new FileInputStream(gradlePropertiesFile))

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        versionCode 5
        versionName "0.6"
        minSdkVersion 14
        targetSdkVersion 22

        archivesBaseName = "Fahrplan-$versionName"

        // Build information
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"
            applicationIdSuffix ".debug"
            zipAlignEnabled true
            debuggable true
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    signingConfigs {
        c3wpw16 {
            storeFile file(props['signing.c3wpw16-release.keystoreFilePath'])
            storePassword props['signing.c3wpw16-release.keystorePassword']
            keyAlias props['signing.c3wpw16-release.keyAlias']
            keyPassword props['signing.c3wpw16-release.keyPassword']
        }
    }

    productFlavors {
        c3wpw16 {
            applicationId "net.wireloss.android.fahrplan.pw16"
            signingConfig signingConfigs.c3wpw16
            buildConfigField "String", "TICKETS_URL", '"https://privacyweek.at/tickets-pw16.html"'
            buildConfigField "String", "SCHEDULE_URL", '"https://fahrplan.privacyweek.at/schedule.xml"'
            buildConfigField "String", "SCHEDULE_DOMAIN_PART", '"https://fahrplan.privacyweek.at"'
            buildConfigField "String", "SCHEDULE_EVENT_PART", '"/events/%1$s.html"'
            buildConfigField "String", "SCHEDULE_PART", '""'
            buildConfigField "String", "VENUE", '"Volkskundemuseum"'
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_YEAR", "2016"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_MONTH", "10"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_DAY", "24"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_YEAR", "2016"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_MONTH", "10"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_DAY", "30"
            buildConfigField "String", "SCHEDULE_FEEDBACK_URL", '"https://cfp.privacyweek.at/en/pw16/public/events/%s/feedback/new"'
        }
    }

    lintOptions {
        // for okio - https://github.com/square/okio/issues/58
        warning "InvalidPackage"
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:23.1.1"
    compile 'com.squareup.okhttp:okhttp:2.7.0'

    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.assertj:assertj-android:1.1.1'
    testCompile 'com.android.support:support-annotations:23.1.1'

}

def gitSha() {
    def res = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
    def diff = 'git diff'.execute([], project.rootDir).text.trim()
    if (diff != null && diff.length() > 0) {
        res += "-dirty"
    }
    return res
}

def buildTime() {
    return new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
}
